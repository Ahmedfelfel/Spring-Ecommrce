package com.felfel.springecom.entity;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
/**
 * Entity representing a line item inside an Order.
 *
 * Fields:
 * - id: primary key generated by the database
 * - product: association to the Product entity (many items can reference same product)
 * - quantity: number of units of the product
 * - totalPrice: computed total price for the line (price * quantity)
 * - order: owning Order entity (many items belong to one order)
 */
public class OrderItem {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id; // primary key, auto-generated

    @ManyToOne
    private Product product; // many-to-one relation to product (eager by default here)

    private int quantity; // number of units ordered for this product

    private BigDecimal totalPrice; // total price for this line item

    @ManyToOne(fetch = FetchType.LAZY)
    private Order order; // owning order (lazy fetched to avoid loading entire order eagerly)
}
